name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: kiren-linux-x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: kiren-linux-x64-musl
          - os: macos-latest
            target: x86_64-apple-darwin
            name: kiren-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: kiren-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: kiren-windows-x64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install -y musl-tools

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/kiren dist/
          chmod +x dist/kiren
          tar -czf ${{ matrix.name }}.tar.gz -C dist kiren

      - name: Prepare artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/kiren.exe dist/
          Compress-Archive -Path dist/kiren.exe -DestinationPath ${{ matrix.name }}.zip

      - name: Upload artifact (Unix)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.tar.gz

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            kiren-linux-x64/*.tar.gz
            kiren-linux-x64-musl/*.tar.gz
            kiren-macos-x64/*.tar.gz
            kiren-macos-arm64/*.tar.gz
            kiren-windows-x64/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}