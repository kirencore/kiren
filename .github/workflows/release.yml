name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: kiren
            asset_name: kiren-linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: kiren
            asset_name: kiren-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: kiren
            asset_name: kiren-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: kiren
            asset_name: kiren-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: kiren.exe
            asset_name: kiren-windows-x64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Install cross (for cross-compilation)
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: cargo install cross

    - name: Build release binary
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
      shell: bash

    - name: Create release archive
      run: |
        mkdir -p release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/
          cd release && zip -r ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/
          cd release && tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
        fi
      shell: bash

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/${{ matrix.asset_name }}.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}